import json

JsonItem = [
'app_apply_submit_loan',
'app_apply_submit_period',
'app_apply_unconfirm_count',
'app_citizenphoto_count',
'app_visit_count',
'app_visit_time1',
'app_visit_time2',
'app_visit_time3',
'att_bankcard_running',
'att_education',
'att_insurance',
'att_others',
'att_residence',
'att_shopping_online',
'att_work',
'b_age',
'b_age_range',
'b_children',
'b_marriage',
'cp_supplier',
'cs1_app_visit_count',
'cs1_contacts_called_max',
'cs1_contacts_called_num',
'cs1_contacts_called_sum',
'cs1_contacts_num',
'cs1_contacts_warning_count',
'cs1_price',
'cs2_app_visit_count',
'cs2_contacts_called_max',
'cs2_contacts_warning_count',
'cs2_sim_num',
'cs_contacts_warning_count',
'cs_sim_num',
'ct_contact_mactch',
'ct_modify_count',
'ct_num',
'lbs_range',
'w1_annualpay',
'w1_role',
'w1_salary',
'w1_salary_mode',
'w1_length',
'cs1_sim_num',
'cs2_contacts_called_num',
'cs2_contacts_num',
'cs_contact_count',
'cs_contact_mobile_count',
'cs_contact_tel_count',
'cs_contact_warningwards_count',
'cs_contact_mobile_yidong_count',
'cs_contact_mobile_dianxin_count',
'cs_contact_mobile_liantong_count',
'cs_app_count',
'cs_app_warning_count',
'cs_app_alipay',
'cs_app_weixin',
'cs_app_weibo',
'cs_app_qq',
'cs_app_loan_count',
'cs_contact_black_count',
'cs_contact_deal_count',
'cs_contact_user_count',
'cs_relation_parent',
'cs_relation_other',
'cs_contact_area_1_count',
'cs_contact_area_2_count',
'cs_contact_area_3_count',
'cs_share_count',
'cs_black_count',
'cs_contact_selfnumber',
'cs_contact_selfname',
'cs_contact_selfnumber_nick',
'cs_contact_filled_match',
'acc_wjq_num',
'acc_jq_num',
'acc_total',
'acc_amount',
'acc_ewjq_num',
'acc_ejq_num',
'acc_etotal',
'acc_eamount',
'apy_doing_num',
'apy_pass_num',
'apy_reject_num',
'apy_cancel_num',
'apy_total',
'apy_query_total',
'apy_query_total_bjg',
'apy_query_total_fbjg',
'blk_num',
'cn_number_in_cell_count',
'cn_number_in_black_cell_count',
'cn_number_in_deal_cell_count',
'cn_number_in_selfcell_count',
'cn_name_selfcell_goodnick'
]

class qqJsonParse:
    def __init__(self, jsonstr):
        self.dict = json.loads(jsonstr)

    def getData(self):
        datalist = [];
        sdict = self.dict
        for item in JsonItem:
            if (sdict[item]):
                b = sdict[item].strip()
                datalist.append(float(b))
            else:
                datalist.append(0)
        return datalist
